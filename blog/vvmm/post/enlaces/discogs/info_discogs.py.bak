import requests
import sys
from dotenv import load_dotenv
import os

# https://www.discogs.com/master/482571-Extremoduro-Agila
# Acceder a las variables de entorno
master_id = sys.argv[1]

# Nombre del archivo de salida
output_file_name = sys.argv[2]

# Cargar las variables de entorno desde el archivo .env
load_dotenv()
DISCOGS_TOKEN = os.getenv("DISCOGS_TOKEN")



def get_album_info(master_id):
    # Construye la URL para obtener información del álbum
    album_url = f'https://api.discogs.com/masters/{master_id}'
    
    # Realiza la solicitud para obtener la información del álbum
    response = requests.get(album_url)
    data = response.json()
    
    # Verifica si se encontraron resultados
    if 'status' in data and data['status'] == 'error':
        return None
    
    # Extrae la información del álbum
    album_info = {}
    
    # Fecha de lanzamiento
    if 'year' in data:
        album_info['**Fecha de lanzamiento**'] = data['year']
    else:
        album_info['**Fecha de lanzamiento**'] = "Desconocida"
    
    # Géneros y Estilos
    if 'genres' in data:
        genres_str = ', '.join(data['genres'])
        album_info['**Géneros**'] = genres_str
    else:
        album_info['**Géneros**'] = "Desconocidos"

    if 'styles' in data:
        styles_str = ', '.join(data['styles'])
        album_info['**Estilos**'] = styles_str
    else:
        album_info['**Estilos**'] = "Desconocidos"
    
    # Tracklist
    if 'tracklist' in data:
        tracklist = []
        for track in data['tracklist']:
            if 'extraartists' in track:
                extra_artists = [artist['name'] for artist in track['extraartists']]
                featuring = f"\n(feat. {' & '.join(extra_artists)})"
            else:
                featuring = ""
            track_info = f"{track['position']}. {track['title']} {featuring}   {track['duration']}"
            tracklist.append(track_info)
        album_info['Tracklist'] = tracklist
    else:
        album_info['Tracklist'] = "Desconocida"
    
    return album_info

if __name__ == "__main__":
    if len(sys.argv) <= 2:
        print("Uso: python discogs_album.py [master_id]")
        sys.exit(1)
    
   
    # Abrir el archivo en modo de escritura
    with open(output_file_name, "a") as output_file:
        # Redirigir la salida estándar al archivo
        sys.stdout = output_file

        # Obtener la información del álbum
        album_info = get_album_info(master_id)
        
        if album_info:
            print("> Información del álbum facilitada por discogs.com:\n")
            for key, value in album_info.items():
                if isinstance(value, list):
                    print(f"{key}:")
                    for item in value:
                        if isinstance(item, dict):
                            for k, v in item.items():
                                print(f"  {k}: {v}")
                                print()  # Agrega un salto de línea adicional

                        else:
                            print(f"  {item}")
                            print()  # Agrega un salto de línea adicional

                elif isinstance(value, dict):
                    print(f"{key}:")
                    for k, v in value.items():
                        print(f"  {k}: {v}")
                        print()  # Agrega un salto de línea adicional
                else:
                    print(f"{key}: {value}")
                    print()  # Agrega un salto de línea adicional
        else:
            print(f"No se encontró información para el master_id '{master_id}'.")
    
    # Restaurar la salida estándar a la consola
    sys.stdout = sys.__stdout__

    print(f"Se ha guardado la información del álbum en '{output_file_name}'.")
